/**
* DevExtreme (ui/file_manager/file_provider/custom.d.ts)
* Version: 19.2.13
* Build date: Fri Dec 03 2021
*
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
*/
import FileProvider, {
    FileProviderOptions
} from './file_provider';

/**
 * Warning! This type is used for internal purposes. Do not import it directly.
 */
export interface CustomFileProviderOptions extends FileProviderOptions<CustomFileProvider> {
    /**
     * A function that cancels the file upload.
     */
    abortFileUpload?: Function;
    /**
     * A function that copies files or folders.
     */
    copyItem?: Function;
    /**
     * A function that creates a folder.
     */
    createDirectory?: Function;
    /**
     * A function that deletes a file or folder.
     */
    deleteItem?: Function;
    /**
     * A function that downloads a file or folder.
     */
    downloadItems?: Function;
    /**
     * A function that gets file system items.
     */
    getItems?: Function;
    /**
     * A function that get items content.
     */
    getItemsContent?: Function;
    /**
     * A function or the name of a data source field that provides information on whether a file or folder contains sub directories.
     */
    hasSubDirectoriesExpr?: string | Function;
    /**
     * A function that moves files and folders.
     */
    moveItem?: Function;
    /**
     * A function that renames files and folders.
     */
    renameItem?: Function;
    /**
     * Specifies a chunk size in bytes.
     */
    uploadChunkSize?: number;
    /**
     * A function that uploads a file in chunks.
     */
    uploadFileChunk?: Function;
}
/**
 * A custom provider allows you to implement custom APIs to access and use file systems.
 */
export default class CustomFileProvider extends FileProvider {
    constructor(options?: CustomFileProviderOptions)
}
